## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Group APIs'
description: |-

  APIs for Group
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/group/group-list
    metadata:
      groupName: 'Group APIs'
      groupDescription: |-

        APIs for Group
      subgroup: ''
      subgroupDescription: ''
      title: 'Group List'
      description: '@bodyParam uid string required The id of the user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      uid:
        name: uid
        description: ''
        required: true
        example: officia
        type: string
        custom: []
    cleanBodyParameters:
      uid: officia
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "status": true,
            "statusCode": 200,
            "data": {
                "0": {
                    "admin": "Tony nelson",
                    "id": "AJolDjZVXfywCFtjgTVEBSxWaYPudIUHVMhK",
                    "name": "Nurses at Bristol",
                    "profile_picture": "group/1qQtvEY71EM76wDJsoNXXCK6tWfGWJtlJaPspRaD.png"
                },
                "2": {
                    "admin": "CRClinic",
                    "id": "fRQDiLq0sMbAmc9QMFmUkL07cAWhIaiW3TVX",
                    "name": "New Group",
                    "profile_picture": "group/wiFx4czB5JyNlzTm0nbW5Lhzf0dw2GaRsPe8ZQQZ.png"
                }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
          "status": false,
          "statusCode": 401,
          "error": {
          "message": [
          "The uid field is required."
          ]
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/group/image-upload
    metadata:
      groupName: 'Group APIs'
      groupDescription: |-

        APIs for Group
      subgroup: ''
      subgroupDescription: ''
      title: 'Group Image Upload API'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      image:
        name: image
        description: Image
        required: true
        example: null
        type: file
        custom: []
      group_id:
        name: group_id
        description: 'Group Id'
        required: true
        example: aut
        type: string
        custom: []
    cleanBodyParameters:
      group_id: aut
    fileParameters:
      image: null
    responses:
      -
        status: 200
        content: |-
          {
          "status": true,
          "statusCode": 200,
          "message": "Image uploaded successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
          "status": false,
          "statusCode": 401,
          "error": {
          "message": [
          "The image field is required.",
          "The group id field is required."
          ]
          }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
          "status": false,
          "statusCode": 401,
          "error": {
          "message": [
          "The image must be an image.",
          "The image must be a file of type: jpeg, png, jpg, gif, svg."
          ]
          }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
          "message": "Group not found!",
          "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/group/members
    metadata:
      groupName: 'Group APIs'
      groupDescription: |-

        APIs for Group
      subgroup: ''
      subgroupDescription: ''
      title: 'Group Member API'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'Group Id'
        required: true
        example: tempora
        type: string
        custom: []
    cleanBodyParameters:
      id: tempora
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "status": true,
            "statusCode": 200,
            "data": [
                {
                    "uid": "0CBwrNCGBacPQbVl2BJo6qg1VPZ2",
                    "name": "Ronald Urrutia IT",
                    "email": "rurrutia@cpsmh.org",
                    "isAdmin": false,
                    "profile_picture": "user/qlbw7dUk022X4vVELvZAHRMSOPiY7woMSHLClbxU.png"
                }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
          "status": false,
          "statusCode": 401,
          "error": {
          "message": [
          "The id field is required."
          ]
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/group/create-group
    metadata:
      groupName: 'Group APIs'
      groupDescription: |-

        APIs for Group
      subgroup: ''
      subgroupDescription: ''
      title: 'Create Group API'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      group_name:
        name: group_name
        description: 'Group Name'
        required: true
        example: et
        type: string
        custom: []
      uid:
        name: uid
        description: 'User Id'
        required: true
        example:
          - laboriosam
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      group_name: et
      uid:
        - laboriosam
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "status": true,
           "statusCode": 200,
          "message": "Group created successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
          "status": false,
          "statusCode": 401,
          "error": {
          "message": [
          "The group_name field is required.",
          "The uid.0 field is required."
          ]
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/group/media
    metadata:
      groupName: 'Group APIs'
      groupDescription: |-

        APIs for Group
      subgroup: ''
      subgroupDescription: ''
      title: 'Media Image'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      group_id:
        name: group_id
        description: 'The id of the group.'
        required: true
        example: consequuntur
        type: string
        custom: []
    cleanBodyParameters:
      group_id: consequuntur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": true,
             "statusCode": 200,
             "data": [
                 {
                     "img": "https://firebasestorage.googleapis.com/v0/b/cps-com-c90aa.appspot.com/o/cpscom_admin_images%2F23442a60-cf95-11ed-8210-fb21b722f56f.jpg?alt=media&token=80ad2885-3797-4adc-96de-eb83172e6a52",
                     "time": "Mar"
                 }
             ]
          }
           @response 401 {
           "status": false,
           "statusCode": 401,
           "error": {
             "message": [
              "The group id field is required."
            ]
           }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/group/media-image-download
    metadata:
      groupName: 'Group APIs'
      groupDescription: |-

        APIs for Group
      subgroup: ''
      subgroupDescription: ''
      title: 'Media Image Download'
      description: '@bodyParam url string required The url of the image.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      url:
        name: url
        description: ''
        required: true
        example: qui
        type: string
        custom: []
    cleanBodyParameters:
      url: qui
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": true,
            "statusCode": 200,

          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
          "status": false,
          "statusCode": 401,
          "error": {
          "message": [
          "The url field is required."
          ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
